## configurations
version: 2.1

jobs:
  CF:
    docker:
      - image: amazon/aws-cli
    environment:
      key: circleci
    steps:
      - checkout
      - run: mkdir ~/params
      - run: aws ec2 create-key-pair --key-name ${key} --output text > ~/params/${key}.pem
      - run: aws cloudformation create-stack --stack-name circle --template-body file://cf.yaml --parameters ParameterKey=KeyName,ParameterValue=${key}
      - run: aws cloudformation wait stack-create-complete --stack-name circle
      - run: echo "[all]" > ~/params/ip
      - run: aws ec2 describe-instances --filters Name=instance-state-name,Values=initializing,running Name=tag:Name,Values=circleci-Instance  --query "Reservations[*].Instances[*].{IP:PublicIpAddress}" --output json | grep IP | cut -d '"' -f 4 >> ~/params/ip
      - run: cat ~/params/ip
      - save_cache:
          key: ip-${CIRCLE_SHA1}
          paths:
            - ~/params
      - run: echo ip-${CIRCLE_SHA1}

  CM:
    docker:
      - image: python:3.7-alpine3.11    
    steps:
      - restore_cache:
          key: ip-${CIRCLE_SHA1}
      - run: echo ip-${CIRCLE_SHA1}
      - run: cat ~/params/ip
      - run: apk add ansible
      - checkout
      - run: ansible-playbook -i ~/params/ip main.yml --private-key ~/params/${key}.pem -vvv

workflows:
  awscircle:
    jobs:
      - CF
      - CM:
          requires:
            - CF

